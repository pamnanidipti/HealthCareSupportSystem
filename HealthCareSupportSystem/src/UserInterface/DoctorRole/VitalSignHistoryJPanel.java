/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PharmacyOrganization;
import Business.Patient.DoctorReport;
import Business.Patient.Patient;
import Business.Patient.VitalSign;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugInvWorkRequest;
import java.awt.CardLayout;
import java.awt.Checkbox;
import java.awt.Component;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pamnani
 */
public class VitalSignHistoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    private Enterprise enterprise;
    private UserAccount userAccount;
    String result;
    private DoctorReport docReport;
    String disease;
    String medicine;
    
    /**
     * Creates new form VitalSignHistoryJPanel
     */
    public VitalSignHistoryJPanel(JPanel userProcessContainer, UserAccount account, Patient patient, Enterprise enterprise)
    {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.enterprise = enterprise;
        this.userAccount = account;
        result = "";
        //docReport = patient.getDocReport();
//        disease = "";
//        medicine = "";
        nameLabel.setText(patient.getPersonName());
        populate();
    }

    public void populate()
    {
        DefaultTableModel model = (DefaultTableModel) vitalsignHistoryTable.getModel();
        model.setRowCount(0);
        ArrayList<VitalSign> vitalSignList = patient.getVitalSignHistory().getHistory();

        for (VitalSign vitalSign : vitalSignList) {
            Object[] row = new Object[5];
            row[0] = vitalSign.getRespiratoryRate();
            row[1] = vitalSign.getHeartRate();
            row[2] = vitalSign.getBloodPressure();
            row[3] = vitalSign.getWeight();
            row[4] = vitalSign;
            model.addRow(row);
        }
       
    }
    
     public void checkAvail(boolean status)
        {
            if(status)
            {
            availabitlityTxtField.setText("Available");
            
            }
            else
            {
                availabitlityTxtField.setText("Unavailable");
                suggestedMedcineJTxtField.setEnabled(true);
                saveJButton.setEnabled(true);
                notifyJButton.setEnabled(true);
            }
                
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vitalsignHistoryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        coldJComboBox = new javax.swing.JCheckBox();
        indigestionJComboBox = new javax.swing.JCheckBox();
        constipationJComboBox = new javax.swing.JCheckBox();
        heartBurnJComboBox = new javax.swing.JCheckBox();
        selectJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        checkJButton = new javax.swing.JButton();
        feverJComboBox = new javax.swing.JCheckBox();
        jointPainJComboBox = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        diseaseJTxtField = new javax.swing.JTextField();
        processReportJButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        suggestedMedcineJTxtField = new javax.swing.JTextField();
        checkAvailJButton = new javax.swing.JButton();
        availabitlityTxtField = new javax.swing.JTextField();
        saveJButton = new javax.swing.JButton();
        notifyJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 3, 36)); // NOI18N
        jLabel1.setText("Vital Sign History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Vital Signs of Patient");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 68, -1, -1));

        nameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        nameLabel.setText("<<name>>");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 68, -1, -1));

        vitalsignHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Respiratory Rate", "Heart Rate", "Blood Pressure", "Weight", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(vitalsignHistoryTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 101, 619, 115));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Examine Patient:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 234, -1, -1));

        jLabel4.setText("Symtoms:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 274, -1, -1));

        coldJComboBox.setText("Cold");
        add(coldJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 306, -1, -1));

        indigestionJComboBox.setText("Indigestion");
        indigestionJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indigestionJComboBoxActionPerformed(evt);
            }
        });
        add(indigestionJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 332, -1, -1));

        constipationJComboBox.setText("Constipation");
        add(constipationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 306, -1, -1));

        heartBurnJComboBox.setText("Heartburn");
        add(heartBurnJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 332, -1, -1));

        selectJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        selectJButton.setText("Select");
        selectJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectJButtonActionPerformed(evt);
            }
        });
        add(selectJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 610, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/examinePat.jpeg"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 274, -1, -1));

        checkJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        checkJButton.setText("Check Disease and Medication");
        checkJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkJButtonActionPerformed(evt);
            }
        });
        add(checkJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 416, -1, -1));

        feverJComboBox.setText("Fever");
        add(feverJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 306, -1, -1));

        jointPainJComboBox.setText("JointPain");
        add(jointPainJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 332, -1, -1));

        jLabel6.setText("Suffering from:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 465, -1, -1));

        diseaseJTxtField.setEnabled(false);
        add(diseaseJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 462, 100, -1));

        processReportJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        processReportJButton.setText("Process Report >>");
        processReportJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processReportJButtonActionPerformed(evt);
            }
        });
        add(processReportJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 567, -1, -1));

        jLabel7.setText("Suggested Medine:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 506, -1, -1));

        suggestedMedcineJTxtField.setEnabled(false);
        add(suggestedMedcineJTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 503, 100, -1));

        checkAvailJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        checkAvailJButton.setText("Check Availability >>");
        checkAvailJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAvailJButtonActionPerformed(evt);
            }
        });
        add(checkAvailJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 500, -1, -1));

        availabitlityTxtField.setEnabled(false);
        add(availabitlityTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 503, 105, -1));

        saveJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        saveJButton.setText("Save Changes");
        saveJButton.setEnabled(false);
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        add(saveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 531, -1, -1));

        notifyJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        notifyJButton.setText("Notify the Pharmacy >>");
        notifyJButton.setEnabled(false);
        notifyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notifyJButtonActionPerformed(evt);
            }
        });
        add(notifyJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 570, 190, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void indigestionJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indigestionJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_indigestionJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout= (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void selectJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectJButtonActionPerformed
        // TODO add your handling code here:
        
        List<JCheckBox> checkboxes = new ArrayList<JCheckBox>();
        //List<String> listData = ArrayList<String>();
         int count = 0;
        for( Component comp : this.getComponents() ) {
           
            if( comp instanceof JCheckBox)
            {
                JCheckBox jck = (JCheckBox)comp;
                if(jck.isSelected())
                {
                    count++;
                }
            }
        }
            if(count != 2)
            {
                JOptionPane.showMessageDialog(this, "Please select only 2 symtoms");
                return;
            }
            else
            {
                for(Component compp : this.getComponents())
                {
                if( compp instanceof JCheckBox) 
                 {
                 JCheckBox sjck = (JCheckBox)compp;
                 
                 if(sjck.isSelected())
                 {
                     result += sjck.getText();
                     
                 }
                 }
                 
             }  
            }
            
            
        
            //********************************working
//            for( Component comp : this.getComponents() ) {
//            int count=0;
//            
//             if( comp instanceof JCheckBox) 
//             {
//                 JCheckBox jck = (JCheckBox)comp;
//                 
//                 if(jck.isSelected())
//                 {
//                     result += jck.getText();
//                     
//                 }
//                 
//             }  
//            }
        //JOptionPane.showMessageDialog(this, result);
    }//GEN-LAST:event_selectJButtonActionPerformed

    private void checkJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkJButtonActionPerformed
        // TODO add your handling code here:
        String disease="";
        String medicine="";
        if(result=="")
        {
            JOptionPane.showMessageDialog(this, "Please select the symptoms","Error",JOptionPane.ERROR_MESSAGE);
        }
        String fileName="symtoms.txt";
        File file = new File(fileName);
        try {
            Scanner inputStream = new Scanner(file);
            inputStream.next();
            while(inputStream.hasNext())
            {
              String data = inputStream.next();
              //System.out.println(data);  
              String[] values = data.split(",");
              String sub1 = values[0]+values[1];
                //System.out.println(sub1);
              String sub2 = values[1]+values[0];
              if(result.equalsIgnoreCase(sub1) || result.equalsIgnoreCase(sub2))
              {
                  disease = values[2];
                 medicine = values[3];
                  
                  diseaseJTxtField.setText(disease);
                  suggestedMedcineJTxtField.setText(medicine);
                  //patient.setDocReport(docReport);
                  
//                  patient.getDocReport().add(disease,medicine);
                  //patient.getDocReport().setMedicine(medicine);
                  patient.getDocReport().setDisease(disease);
                  patient.getDocReport().setMedicine(medicine);
//                  System.out.println("disease"+patient.getDocReport().getDisease()+"med"+patient.getDocReport().getMedicine());
                  break;
              }
              
              
//              {
//              String sym1 = values[0];
//              String sym2 = values[1];
//              String sym3 = values[2];
//                System.out.println("sym1  "+values[0]+"sym2  "+values[1]+"sym3  "+values[2]);
//              }
            }
        }
            catch (FileNotFoundException ex) {
            Logger.getLogger(VitalSignHistoryJPanel.class.getName()).log(Level.SEVERE, null, ex);
        
        }
    }//GEN-LAST:event_checkJButtonActionPerformed

    private void processReportJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processReportJButtonActionPerformed
        // TODO add your handling code here:
        PatientReportJPanel panel = new PatientReportJPanel(userProcessContainer,patient, enterprise);
        userProcessContainer.add("PatientReport", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_processReportJButtonActionPerformed

    private void checkAvailJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAvailJButtonActionPerformed
        // TODO add your handling code here:
        CheckAvailabilityJPanel panel = new CheckAvailabilityJPanel(userProcessContainer,patient.getDocReport().getMedicine(),enterprise);
        userProcessContainer.add("CheckAvailability", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_checkAvailJButtonActionPerformed

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        patient.getDocReport().setMedicine(suggestedMedcineJTxtField.getText());
        suggestedMedcineJTxtField.setEnabled(false);
        saveJButton.setEnabled(false);
        notifyJButton.setEnabled(false);
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void notifyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notifyJButtonActionPerformed
        // TODO add your handling code here:
        DrugInvWorkRequest request = new DrugInvWorkRequest();
        request.setMessage("The drug " +patient.getDocReport().getMedicine()+" is not available in the store.Please renew the inventory for the same.");
        request.setRequestedTime(new Date());
        JOptionPane.showMessageDialog(this, "Meaasage request sent to the Pharmacy!");
        notifyJButton.setEnabled(false);
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof PharmacyOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        
    }//GEN-LAST:event_notifyJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availabitlityTxtField;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton checkAvailJButton;
    private javax.swing.JButton checkJButton;
    private javax.swing.JCheckBox coldJComboBox;
    private javax.swing.JCheckBox constipationJComboBox;
    private javax.swing.JTextField diseaseJTxtField;
    private javax.swing.JCheckBox feverJComboBox;
    private javax.swing.JCheckBox heartBurnJComboBox;
    private javax.swing.JCheckBox indigestionJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox jointPainJComboBox;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton notifyJButton;
    private javax.swing.JButton processReportJButton;
    private javax.swing.JButton saveJButton;
    private javax.swing.JButton selectJButton;
    private javax.swing.JTextField suggestedMedcineJTxtField;
    private javax.swing.JTable vitalsignHistoryTable;
    // End of variables declaration//GEN-END:variables
}
