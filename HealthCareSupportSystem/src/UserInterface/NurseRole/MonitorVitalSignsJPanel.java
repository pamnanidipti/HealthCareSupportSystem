/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.NurseRole;

import Business.Enterprise.Enterprise;
import Business.Patient.Patient;
import Business.Patient.VitalSign;
import java.awt.CardLayout;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Date;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Pamnani
 */
public class MonitorVitalSignsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Patient patient;
    public static int a[]=new int[50];
    public static int b[]=new int[50];
    public static int c[]=new int[50];
    public static int d[][]=new int[50][3];
    /**
     * Creates new form MonitorVitalSignsJPanel
     */
    public MonitorVitalSignsJPanel(JPanel userProcessContainer,Patient patient,
            Enterprise enterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.patient=patient;
        this.enterprise=enterprise;
        nameLabel.setText(patient.getPersonName());
        randomGenerate();
        populateVitalSigns();
    }

    public void randomGenerate()
    {
        String fileName="test.txt";
        File file = new File(fileName);
        try {
            Scanner inputStream = new Scanner(file);
            inputStream.next();
            while(inputStream.hasNext())
            {
                String data = inputStream.next();
                //System.out.println(data);
                String[] values = data.split(",");
                //System.out.println(values[0]);
                int respRate=Integer.parseInt(values[0]);
                //System.out.println(respRate);
                int heartRate=Integer.parseInt(values[1]);
                int bp=Integer.parseInt(values[2]);
                int weight=Integer.parseInt(values[3]);
                respiratoryRateJTextField.setText(String.valueOf(respRate));
                heartRateJTextField.setText(String.valueOf(heartRate));
                bloodPressureJTextField.setText(String.valueOf(bp));
                weightJTextField.setText(String.valueOf(weight));
            }
            inputStream.close();
            
            } catch (FileNotFoundException ex) {
            Logger.getLogger(MonitorVitalSignsJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            /*Random r = new Random();
            int i=r.nextInt(80-65)+65;
            System.out.println(i);*/
            /*File oFile=new File("C:\\Users\\Pamnani\\Documents\\NetBeansProjects\\HealthCareSupportSystem\\test.txt");
            FileInputStream fis=null;
            BufferedInputStream bis=null;
            DataInputStream dis=null;
            int iIndex=0;
            String name;
            try{
            fis=new FileInputStream(oFile);
            bis=new BufferedInputStream(fis);
            dis=new DataInputStream(bis);

            while(dis.available()!=0){
            a[iIndex]=Integer.parseInt(dis.readLine());
            name=dis.readLine();
            b[iIndex]=Integer.parseInt(name);
            c[iIndex]=Integer.parseInt(dis.readLine());
            d[iIndex]=new int[]{a[iIndex], (b[iIndex]), c[iIndex]};
            
            iIndex++;
            }
            fis.close();
            bis.close();
            dis.close();
            }catch(FileNotFoundException e){
            e.printStackTrace();
            }catch(IOException e){
            e.printStackTrace();
            }*/
        
    }
    public void populateVitalSigns()
    {
        VitalSign vitalSign = patient.getVitalSignHistory().createAndAddVitalSign();
        vitalSign.setRespiratoryRate(Integer.parseInt(respiratoryRateJTextField.getText()));
        vitalSign.setHeartRate(Integer.parseInt(heartRateJTextField.getText()));
        vitalSign.setBloodPressure(Integer.parseInt(bloodPressureJTextField.getText()));
        vitalSign.setWeight(Integer.parseInt(weightJTextField.getText()));
        vitalSign.setTimestamp(new Date());
        JOptionPane.showMessageDialog(this,"Vital Sign Recorded.","Information",JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        respiratoryRateJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bloodPressureJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        heartRateJTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        weightJTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setEnabled(false);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 3, 36)); // NOI18N
        jLabel1.setText("Vital Signs");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Vital Signs for Patient");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 63, -1, -1));

        nameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        nameLabel.setText("<<name>>");
        add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 63, -1, -1));

        respiratoryRateJTextField.setEnabled(false);
        add(respiratoryRateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 103, 148, -1));

        jLabel4.setText("Weight in pounds");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 228, -1, -1));

        jLabel3.setText("Systolic blood pressure");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        bloodPressureJTextField.setEnabled(false);
        add(bloodPressureJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 187, 148, -1));

        jLabel5.setText("Heart rate");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 144, -1, -1));

        heartRateJTextField.setEnabled(false);
        add(heartRateJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 141, 148, -1));

        jLabel6.setText("Respiratory rate");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 106, -1, -1));

        weightJTextField.setEnabled(false);
        add(weightJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 225, 148, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/vitalSign.png"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 23, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 335, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout= (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bloodPressureJTextField;
    private javax.swing.JTextField heartRateJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField respiratoryRateJTextField;
    private javax.swing.JTextField weightJTextField;
    // End of variables declaration//GEN-END:variables
}
